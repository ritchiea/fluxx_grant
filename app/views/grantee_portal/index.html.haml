- if FileTest.exists? "#{Rails.root}/public/documents/documents.yaml"
  - documents = YAML::load(File.open( "#{Rails.root}/public/documents/documents.yaml" ))
- else
  - documents = WillPaginate::Collection.create(params[:page] || 1, WillPaginate.per_page) do |pager|
    - pager.replace Dir.glob("#{Rails.root}/public/documents/*.pdf").map{|filename| filename.gsub("#{Rails.root}/public/documents/", '')}.sort

.container
  -if documents.empty?
    = render :partial => "lois/client_logo"
    %p
      = render :partial => "grantee_portal/information"
  -else
    %div.c60l
      = render :partial => "lois/client_logo"
      %p
        = render :partial => "grantee_portal/information"
    %div.c40r
      = render :partial => "document_list", :locals => {:@data => documents}
.container{"data-src".to_sym => url_for({:table => "requests", :page => @requests.current_page})}
  = render :partial => "grant_request_list", :locals => {:@data => @requests, :@title => "Requests"}
.container{"data-src".to_sym => url_for({:table => "grants", :page => @grants.current_page})}
  = render :partial => "grant_request_list", :locals => {:@data => @grants, :@title => "Grants"}                    
.container{"data-src".to_sym => url_for({:table => "reports", :page => @reports.current_page}), :class => "reports"}
  = render :partial => "report_list", :locals => {:@data => @reports}
.container{"data-src".to_sym => url_for({:table => "transactions", :page => @transactions.current_page})}
  = render :partial => "transaction_list", :locals => {:@data => @transactions}
/ .container
/   = render :partial => "document_list", :locals => {:@data => @transactions}
