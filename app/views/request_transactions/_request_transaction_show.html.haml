- request_transaction_list = model.request.request_transactions
%h1= number_to_currency model.amount_due, :precision => 0 if model.amount_due
%h4.subhead
  = "Payment #{request_transaction_list.index(model) + 1} of #{request_transaction_list.size}"
%h4.subhead
  = render_request_or_grant_amount model.request, 'total granted'
%p.description= raw "#{render_grant_or_request_id model.request} - #{render_program_name model.request}"
%div.partial
  .pairs
    .key Status:
    .value= model.state_to_english
  .pairs
    .key Due Date:
    .value= model.due_at.mdy if model.due_at
  .pairs
    .key Payment Recorded By:
    .value= model.payment_recorded_by.full_name if model.payment_recorded_by
  .pairs
    .key Conditions:
    .value= model.condition.empty? ? "None" : model.condition
  - if model.user_payee
    .pairs
      .key Payee (Person):
      .value= model.user_payee.full_name
  - if model.organization_payee
    .pairs
      .key Payee (Organization):
      .value= model.organization_payee.name
%div.partial
  %h3 Transaction Funding Sources
  %div
    - total = 0
    - model.request.request_funding_sources.each do |rfs|
      - if rfs.funding_source_allocation && rfs.funding_source_allocation.funding_source
        .pairs
          .key Amount:
          .value= as_currency(rfs.funding_amount)
          -total += rfs.funding_amount
        .pairs
          .key Source:
          .value= rfs.funding_source_allocation.funding_source.name
        .pairs
          .key Initiatives:
          .value= render :partial => "request_funding_sources/request_funding_source_initiatives", :locals => { :funding_source => rfs }
  %h3
  %strong= "Total: #{as_currency(total)}"
= render :partial => "model_documents/list_model_documents", :locals => { :model => model}
= render :partial => "notes/list_notes", :locals => { :model => model, :class_type => RequestTransaction.name}
= render :partial => "audits/list_audits", :locals => { :model => model}
