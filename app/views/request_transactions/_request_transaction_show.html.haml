- request_transaction_list = model.request.request_transactions
%h1= number_to_currency model.amount_due, :precision => 0 if model.amount_due
%h4.subhead
  = "Payment #{request_transaction_list.index(model) + 1} of #{request_transaction_list.size}"
%h4.subhead
  = render_request_or_grant_amount model.request, 'total granted'
%p.description= raw "#{render_grant_or_request_id model.request} - #{render_program_name model.request}"
%div.partial
  .pairs
    .key Status:
    .value= model.state_to_english
  .pairs
    .key Due Date:
    .value= model.due_at.mdy if model.due_at
  - if model.payment_recorded_by
    .pairs
      .key Payment Recorded By:
      .value= model.payment_recorded_by.full_name
  .pairs
    .key Conditions:
    .value= model.condition && !model.condition.empty? ?  model.condition : "None"
  - if model.user_payee
    .pairs
      .key Payee (Person):
      .value= model.user_payee.full_name
  - if model.organization_payee
    .pairs
      .key Payee (Organization):
      .value= model.organization_payee.name
%div.partial
  %h3 Transaction Funding Sources
  %div
    - total = 0
    - model.request_transaction_funding_sources.each do |rfs|
      - if rfs.request_funding_source
        %dl.inline
          %dt Amount:
          %dd= as_currency(rfs.amount)
          -total += rfs.amount
          %dt Source:
          %dd= rfs.request_funding_source.funding_source_allocation.funding_source.name if rfs.request_funding_source.funding_source_allocation && rfs.request_funding_source.funding_source_allocation.funding_source
          %dt Initiatives:
          %dd= render :partial => "request_funding_sources/request_funding_source_initiatives", :locals => { :funding_source => rfs.request_funding_source }
          %hr
  %strong= "Total: #{as_currency(total)}"
= render :partial => "model_documents/list_model_documents", :locals => { :model => model}
= render :partial => "notes/list_notes", :locals => { :model => model, :class_type => RequestTransaction.name}
= render :partial => "audits/list_audits", :locals => { :model => model}
