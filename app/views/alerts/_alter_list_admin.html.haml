-controller_type = params['alert']['model_controller_type']
-model_type = controller_type.tableize.split(/_controller/)[0].singularize.titleize
%h3
  = link_to "#{model_type} Alerts", current_index_path, "data-filter" => "alert[model_controller_type]=#{controller_type}", :title => "#{model_type} Alerts", :class => 'new-listing'
  - if current_user.has_create_for_model?(Alert)
    &nbsp;&nbsp;
    = link_to image_tag('/images/fluxx_engine/theme/default/icons/add.png', :class=> 'add-button'), new_alert_path(:alert => {:model_controller_type => controller_type}), :title => 'Add An Alert', :class => 'to-modal wide', 'data-on-success' => 'refreshCaller,close'

- if !models || models.empty?
  .warning
    No Alerts available.
    %br
    = link_to "Add one now", new_alert_path(:alert => {:model_controller_type => controller_type}), :title => 'Add An Alert', :class => 'to-modal wide', 'data-on-success' => 'refreshCaller,close'
- else
  - models.each do |model|
    %div
      %span.actions
        - if current_user.has_delete_for_model?(model)
          = link_to image_tag("/images/fluxx_engine/theme/default/icons/delete.png", :class => 'delete-button'), model, :class => 'as-delete', 'data-on-success' => 'refreshCaller'
      %dl.inline
        %dt name:
        %dd
          - if current_user.has_update_for_model?(model)
            = link_to model.name, edit_alert_path(:id => model, :as_modal => '1'), :class => 'to-modal wide', 'data-on-success' => 'refreshCaller,close'
          - else
            = model.name
        %dt Subject:
        %dd= model.subject
      %hr