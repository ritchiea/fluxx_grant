- display_program_budget = Fluxx.config(:show_program_budget) == "1" || Fluxx.config(:show_sub_program_budget) == "1" || Fluxx.config(:show_initiative_budget) == "1" || Fluxx.config(:show_sub_initiative_budget) == "1"

%fieldset.inputs
  %ol
  - if model.new_record?
    - all_funding_sources = FundingSource.load_all.sort_by {|fs| fs.name ? fs.name.downcase : ''}
    = form.input :funding_source_id, :label => "Funding Source:", :as => :select, :collection => all_funding_sources
    = render :partial => "funding_source_allocation_authorities/programs", :locals => { :form => form, :allocation => model }
  - else
    Funding Source:
    = model.funding_source.name if model && model.funding_source
    <p>
  
  - if display_program_budget
    = form.input :budget_amount, :label => "Amount Budgeted:"
    = form.input :actual_budget_amount, :label => "Actual Amount:"
  - if model.new_record?
    - current_year = Time.now.year
    - year_range = ((current_year-25)..(current_year + 2))
    - form.object.spending_year = current_year unless form.object.spending_year
    = form.input :spending_year, :label => "Spending Year", :as => :select, :collection => year_range.to_a.reverse
  - else
    Spending Year:
    = model.spending_year if model
    <p>
  - form.object.retired = model.retired if model
  = form.input :retired, :as => :boolean, :label => "Retired:"
  %div.funding-source-amount-available
    - if model.funding_source
      = "#{number_to_currency(model.funding_source.amount_available || 0)} available"
  
  = form.commit_button 'Update Budget Allocation'